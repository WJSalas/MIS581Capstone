dist_km2 <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if(dist_km2 > 1.609344)
#   next
#print(dist_km2)
# if-else statement
if (dist_km2 > 1.609344){
next
}else if (dist_km2 <= 1.609344 | dist_km2 > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km2 <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# Rename the columns in the df Output
colnames(df) <- c("API", "H1000", "H5280", "Well_PTax", "Sum_Home_PTax")
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
df <- data.frame(API=character(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
tax_sum <- 0
h_count <- 0
H1K <- 0
# # Convert Degrees to Radian for the Well Location info.
# long1 <- deg2rad(Well_Data$Long1[i])
# lat1 <- deg2rad(Well_Data$lat1[i])
for (j in 1:n2){
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km2 <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if(dist_km2 > 1.609344)
#   next
#print(dist_km2)
# if-else statement
if (dist_km2 > 1.609344){
next
}else if (dist_km2 <= 1.609344 & dist_km2 > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km2 <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# Rename the columns in the df Output
colnames(df) <- c("API", "H1000", "H5280", "Well_PTax", "Sum_Home_PTax")
# Load Library
library(fields)
## Working Files
Assessor_Master_Res_Data <- paste(getwd(), "Working/Assessor_Master_Res_Data_2022.csv", sep = "/")
Well_Master_Data <- paste(getwd(), "Working/Master_Well_Data_2022.csv", sep = "/")
## Read in .csv file
Assessor_Data <- read.csv(Assessor_Master_Res_Data, header = TRUE)
Well_Data <- read.csv(Well_Master_Data, header = TRUE)
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km2 > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# Rename the columns in the df Output
colnames(df) <- c("Well_API", "H1000", "H5280", "Well_PTax", "Sum_Home_PTax")
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
Well_Status=character(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], Well_Data$Well_Stat[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# Load Library
library(fields)
## Working Files
Assessor_Master_Res_Data <- paste(getwd(), "Working/Assessor_Master_Res_Data_2022.csv", sep = "/")
Well_Master_Data <- paste(getwd(), "Working/Master_Well_Data_2022.csv", sep = "/")
## Read in .csv file
Assessor_Data <- read.csv(Assessor_Master_Res_Data, header = TRUE)
Well_Data <- read.csv(Well_Master_Data, header = TRUE)
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
Well_Status=character(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], Well_Data$Well_Stat[i], H1K, h_count, Well_Data$Tax_Est[i], tax_sum)
df <- rbind(df, df_new)
}
# Rename the columns in the df Output
colnames(df) <- c("Well_API", "Well_Status", "H1000", "H5280", "Well_PTax", "Sum_Home_PTax")
View(df)
Output <- paste(getwd(), "Working/Assessor_Well_Output_Data.csv", sep = "/")
write.csv(df, Output, row.names = TRUE)
# Load Library
library(fields)
## Working Files
Assessor_Master_Data <- paste(getwd(), "Working/Assessor_Master_Res_Data_2022.csv", sep = "/")
Well_Master_Data <- paste(getwd(), "Working/Master_Well_Data_Combined_v3.csv", sep = "/")
## Read in .csv file
Assessor_Data <- read.csv(Assessor_Master_Data, header = TRUE)
Well_Data <- read.csv(Well_Master_Data, header = TRUE)
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
Well_ID=character(),
Well_Status=character(),
Oil_Sales=integer(),
Gas_Sales=integer(),
Stripper_flg=character(),
Well_Tot_Mill=numeric(),
Well_Asd_Val=integer(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_Asd_Val=integer(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_asd_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Sum up the total home assessed values
h_asd_sum <- h_asd_sum + h_asd
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], Well_Data$Well_ID[i], Well_Data$Well_Stat[i], Well_Data$Oil_Sales[i], Well_Data$Gas_Sales[i], Well_Data$stripper_flg[i], Well_Data$tot_mill[i], Well_Data$asd_val[i], H1K, h_count, Well_Data$Tax_Est[i], h_asd_sum, tax_sum)
df <- rbind(df, df_new)
}
library(fields)
Assessor_Master_Data <- paste(getwd(), "Working/Assessor_Master_Res_Data_2022.csv", sep = "/")
Well_Master_Data <- paste(getwd(), "Working/Master_Well_Data_Combined_v3.csv", sep = "/")
## Read in .csv file
Assessor_Data <- read.csv(Assessor_Master_Data, header = TRUE)
Well_Data <- read.csv(Well_Master_Data, header = TRUE)
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
Well_ID=character(),
Well_Status=character(),
Oil_Sales=integer(),
Gas_Sales=integer(),
Stripper_flg=character(),
Well_Tot_Mill=numeric(),
Well_Asd_Val=integer(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_Asd_Val=integer(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_asd_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Sum up the total home assessed values
h_asd_sum <- h_asd_sum + h_asd
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], Well_Data$Well_ID[i], Well_Data$Well_Stat[i], Well_Data$Oil_Sales[i], Well_Data$Gas_Sales[i], Well_Data$stripper_flg[i], Well_Data$tot_mill[i], Well_Data$asd_val[i], H1K, h_count, Well_Data$Tax_Est[i], h_asd_sum, tax_sum)
df <- rbind(df, df_new)
}
View(Well_Data)
# Load Library
library(fields)
## Working Files
Assessor_Master_Data <- paste(getwd(), "Working/Assessor_Master_Res_Data_2022.csv", sep = "/")
Well_Master_Data <- paste(getwd(), "Working/Master_Well_Data_Combined_v3.csv", sep = "/")
## Read in .csv file
Assessor_Data <- read.csv(Assessor_Master_Data, header = TRUE)
Well_Data <- read.csv(Well_Master_Data, header = TRUE)
# 1,000 ft = 0.3048 km
# 1 mile = 1.609344 km
## Stacked for loop
# Count the number of rows in each of the dataframes. These will be used to set our for loops.
n1 <- nrow(Well_Data)
n2 <- nrow(Assessor_Data)
# Create a new dataframe called df where we will keep track of our outputs from the for loops.
df <- data.frame(Well_API=character(),
Well_ID=character(),
Well_Status=character(),
Oil_Sales=integer(),
Gas_Sales=integer(),
Stripper_flg=character(),
Well_Tot_Mill=numeric(),
Well_Asd_Val=integer(),
H1000=integer(),
H5280=integer(),
Well_PTax=numeric(),
Sum_Home_Asd_Val=integer(),
Sum_Home_PTax=numeric(),
stringsAsFactors = FALSE)
for (i in 1:n1){
# Initialize the counting veriables for each loop through the Well_Data dataframe.
tax_sum <- 0
h_asd_sum <- 0
h_count <- 0
H1K <- 0
for (j in 1:n2){
# Assign each Lat and Long to the correct input
long1 <- Well_Data$long1[i]
lat1 <- Well_Data$lat1[i]
long2 <- Assessor_Data$long2[j]
lat2 <- Assessor_Data$lat2[j]
# Calculate the distances between the Well and home
dist_km <- rdist.earth(matrix(c(long1,lat1), ncol=2), matrix(c(long2,lat2), ncol=2), miles = FALSE, R = 6371)
# if-else statement that will be used to tally the number of homes within the two different ranges that we are interested in and exclude anything over 1 mile away from a well.
if (dist_km > 1.609344){
next
}else if (dist_km <= 1.609344 & dist_km > 0.3048){
H1K_new <- 0
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}else if (dist_km <= 0.3048){
H1K_new <- 1
h_count_new <- 1
h_asd <- Assessor_Data$TOT_ACTVAL[j]
h_tax <- Assessor_Data$Calc_Taxes[j]
}
# Count the number of homes within 1000 ft
H1K <- H1K + H1K_new
# Count the number of homes within one mile of the well
h_count <- h_count + h_count_new
# Sum up the total home assessed values
h_asd_sum <- h_asd_sum + h_asd
# Summaries the total Property Tax amount for all of the homes within one mile of the well
tax_sum <- tax_sum + h_tax
}
# Create a dataframe from the ouput of the if-else statement and append it to the df
df_new <- c(Well_Data$API_Label[i], Well_Data$Well_ID[i], Well_Data$Well_Stat[i], Well_Data$Oil_Sales[i], Well_Data$Gas_Sales[i], Well_Data$stripper_flg[i], Well_Data$tot_mill[i], Well_Data$asd_val[i], H1K, h_count, Well_Data$Tax_Est[i], h_asd_sum, tax_sum)
df <- rbind(df, df_new)
}
# Rename the columns in the df Output
colnames(df) <- c("Well_API", "Well_ID", "Well_Status", "Oil_Sales", "Gas_Sales", "Stripper_flg", "Well_Tot_Mill", "Well_Asd_Val", "H1000", "H5280", "Well_PTax", "Sum_Home_Asd_Val", "Sum_Home_PTax")
Output <- paste(getwd(), "Working/Assessor_Well_Output_Data_v2.csv", sep = "/")
write.csv(df, Output, row.names = TRUE)
